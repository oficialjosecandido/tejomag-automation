name: Deploy TejoMag to Azure

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: tejomag-backend
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend to Azure App Service
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy to Azure Web App using CLI
        run: |
          # Create a zip file of the backend
          cd backend
          zip -r ../backend-deploy.zip . -x "*.pyc" "__pycache__/*" "*.db"
          cd ..
          
          # Deploy using Azure CLI
          az webapp deployment source config-zip \
            --resource-group tejomag-rg \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --src backend-deploy.zip
  
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Azure Static Web Apps
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_VICTORIOUS_HILL_04593EB03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "frontend"
          output_location: "build"
          skip_app_build: false
          app_build_command: "npm run build"
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

